https://practice.geeksforgeeks.org/problems/implement-two-stacks-in-an-array/1#

---------------------------------
#cpp solution
//Function to push an integer into the stack1.
void twoStacks :: push1(int x)
{
    arr[++top1] = x;

}
   
//Function to push an integer into the stack2.
void twoStacks ::push2(int x)
{
    arr[--top2] = x;

}
   
//Function to remove an element from top of the stack1.
int twoStacks ::pop1()
{
    return top1 == -1 ? -1 : arr[top1--];

}

//Function to remove an element from top of the stack2.
int twoStacks :: pop2()
{
    return top2 == size ? -1 : arr[top2++];

}


---------------------------------
#java solution

/* Structure of the class is
class TwoStack
{

	int size;
	int top1,top2;
	int arr[] = new int[100];

	TwoStack()
	{
		size = 100;
		top1 = -1;
		top2 = size;
	}
}*/

class Stacks
{
    //Function to push an integer into the stack1.
    void push1(int x, TwoStack sq)
    {
        sq.top1 = sq.top1+1;
        sq.arr[sq.top1] = x;
        
    }

    //Function to push an integer into the stack2.
    void push2(int x, TwoStack sq)
    {
        sq.top2 = sq.top2-1;
        sq.arr[sq.top2] = x;

    }

    //Function to remove an element from top of the stack1.
    int pop1(TwoStack sq)
    {
        if(sq.top1 != -1){
        int t = sq.arr[sq.top1];
        sq.top1 = sq.top1-1;
        return t;
        }
        return -1;
        
    }

    //Function to remove an element from top of the stack2.
    int pop2(TwoStack sq)
    {
        if(sq.top2!=100){
        int t1 = sq.arr[sq.top2];
        sq.top2 += 1;
        return  t1; 
        }
        return -1;
        
    }
}


